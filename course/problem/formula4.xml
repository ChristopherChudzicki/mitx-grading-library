<problem display_name="More General Names" showanswer="always" weight="10" attempts="">

<p>Variable names can now include primes at the end! Here, the answer is <code>x'+v*t</code> (a Galilean change of coordinate).</p>

<script type="text/python" system_path="python_lib">
from mitxgraders import *
grader = FormulaGrader(variables=["x'", 'v', 't'])
# Note that we don't inline thise, because escaping quotation marks isn't pretty!
</script>

<p style="display:inline">[mathjaxinline]x =[/mathjaxinline] </p>
<customresponse cfn="grader" inline="1" expect="x'+v*t">
  <textline math="1" inline="1" preprocessorClassName="MJxPrep" preprocessorSrc="/static/MJxPrep.js"/>
</customresponse>

<p>You can also use tensor notation for variable names. Here, the answer is <code>T_{x}^{13} + 2*T_{y}^{13}</code>. Notice that the preview box styles these correctly. The caret to indicate raised indices is not confused with the caret to indicate powers.</p>

<script type="text/python" system_path="python_lib">
from mitxgraders import *
grader2 = FormulaGrader(
    variables=['T_{x}^{13}', 'T_{y}^{13}']
)
</script>

<p style="display:inline">[mathjaxinline]x =[/mathjaxinline] </p>
<customresponse cfn="grader2" inline="1" expect="T_{x}^{13}+2*T_{y}^{13}">
  <textline math="1" inline="1" preprocessorClassName="MJxPrep" preprocessorSrc="/static/MJxPrep.js"/>
</customresponse>

<p>Update: These enhancements have now been added to edX!</p>

<p><a href="https://github.com/mitodl/mitx-grading-library/tree/master/course/problem/formula4.xml" target="_blank">View source</a></p>

</problem>
